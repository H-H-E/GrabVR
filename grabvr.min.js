(function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):e.GrabVR=r()})(this,function(){"use strict";var e=function(e){var r=[],a=10,t=[],o=new THREE.Vector3(0,0,-1);return{add:function(a){a.grabVR={raycaster:new THREE.Raycaster,quaternion:new THREE.Quaternion,line:new THREE.Object3D,grabbedObject:null,hasAGrabbedObject:!1,grabberHookPoint:new THREE.Object3D,releaseObject:!1};var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3(0,0,0)),t.vertices.push(new THREE.Vector3(0,0,-100)),a.grabVR.line=new THREE.Line(t,new THREE.LineBasicMaterial({color:8947848})),a.add(a.grabVR.line),r.push(a);var o=new Physijs.BoxMesh(new THREE.CubeGeometry(.1,.1,.5),new THREE.MeshStandardMaterial({color:65416,wireframe:!0}),1);e.add(o),a.grabVR.mesh=o;var b=new THREE.Mesh(new THREE.SphereBufferGeometry(.1,5,5),new THREE.MeshStandardMaterial({color:65280,wireframe:!0}));e.add(b),a.grabVR.grabberHookPoint=b},grabableObjects:t,grabableDistance:a,grab:function(e){var r=e.grabVR.raycaster.intersectObjects(t);r.length>0&&(e.grabVR.grabberHookPoint.matrix.copy(r[0].object.matrixWorld),e.grabVR.grabberHookPoint.applyMatrix((new THREE.Matrix4).getInverse(e.matrixWorld)),e.add(e.grabVR.grabberHookPoint),e.grabVR.grabbedObject=r[0].object,e.grabVR.grabberHookPoint.visible=!0,e.grabVR.hasAGrabbedObject=!0)},release:function(e){e.grabVR.hasAGrabbedObject&&(e.grabVR.hasAGrabbedObject=!1,e.grabVR.releaseObject=!0,e.grabVR.grabberHookPoint.visible=!1)},update:function(e){r.forEach(function(e){e.getWorldPosition(e.grabVR.raycaster.ray.origin),e.getWorldQuaternion(e.grabVR.quaternion),e.grabVR.raycaster.ray.direction.copy(o).applyEuler((new THREE.Euler).setFromQuaternion(e.grabVR.quaternion,"XYZ"));var r=e.grabVR.raycaster.intersectObjects(t);if(r.length>0?e.grabVR.line.visible=!0:e.grabVR.line.visible=!1,e.grabVR.hasAGrabbedObject){var a=new THREE.Vector3;e.getWorldPosition(a),e.grabVR.grabberHookPoint.lookAt(e.grabVR.mesh.worldToLocal(a));var a=new THREE.Vector3;e.grabVR.grabberHookPoint.getWorldPosition(a),a=e.grabVR.grabbedObject.worldToLocal(a).multiplyScalar(4),a.applyEuler(e.grabVR.grabbedObject.rotation),e.grabVR.grabbedObject.setLinearVelocity(a)}e.grabVR.mesh.position.copy(e.grabVR.raycaster.ray.origin),e.grabVR.mesh.__dirtyPosition=!0,e.grabVR.mesh.rotation.copy((new THREE.Euler).setFromQuaternion(e.grabVR.quaternion,"XYZ")),e.grabVR.mesh.__dirtyRotation=!0})}}};return e});