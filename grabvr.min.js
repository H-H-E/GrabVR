(function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):e.GrabVR=r()})(this,function(){"use strict";var e=function(e){var r=[],a=10,t=[],b=new THREE.Vector3(0,0,-1);return{add:function(e){e.grabVR={raycaster:new THREE.Raycaster,quaternion:new THREE.Quaternion,line:new THREE.Object3D,grabbedObject:null};var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3(0,0,0)),a.vertices.push(new THREE.Vector3(0,0,-100)),e.grabVR.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:8947848})),e.add(e.grabVR.line),r.push(e)},grabableObjects:t,grabableDistance:a,grab:function(e){var r=e.grabVR.raycaster.intersectObjects(t);r.length>0&&(r[0].object.matrix.copy(r[0].object.matrixWorld),r[0].object.applyMatrix((new THREE.Matrix4).getInverse(e.matrixWorld)),e.add(r[0].object),e.grabVR.grabbedObject=r[0].object)},release:function(r){null!=r.grabVR.grabbedObject&&(r.grabVR.grabbedObject.matrix.copy(r.grabVR.grabbedObject.matrixWorld),r.grabVR.grabbedObject.applyMatrix((new THREE.Matrix4).getInverse(e.matrixWorld)),e.add(r.grabVR.grabbedObject),r.grabVR.grabbedObject=null)},update:function(e){r.forEach(function(r){r.getWorldPosition(r.grabVR.raycaster.ray.origin),r.getWorldQuaternion(r.grabVR.quaternion),r.grabVR.raycaster.ray.direction.copy(b).applyEuler((new THREE.Euler).setFromQuaternion(r.grabVR.quaternion,"XYZ"));var a=r.grabVR.raycaster.intersectObjects(t);a.length>0?r.grabVR.line.visible=!0:r.grabVR.line.visible=!1,r.grabVR.grabbedObject&&r.grabVR.grabbedObject.position.z<-.5&&(r.grabVR.grabbedObject.position.z+=20*e)})}}};return e});