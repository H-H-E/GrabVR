(function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):e.GrabVR=r()})(this,function(){"use strict";var e=function(e,r){var a=[],t=10,o=[],b=new THREE.Vector3(0,0,-1),n=!1;return r&&(n=r,console.log("usePhysijs = "+n)),{add:function(r){r.grabVR={raycaster:new THREE.Raycaster,quaternion:new THREE.Quaternion,grabbedObject:null,hasAGrabbedObject:!1,mesh:new THREE.Object3D,line:new THREE.Object3D,grabberHook:new THREE.Object3D};var t;t=n?new Physijs.BoxMesh(new THREE.CubeGeometry(.1,.1,.5),new THREE.MeshStandardMaterial({color:65416,wireframe:!0}),.1):new THREE.Mesh(new THREE.CubeGeometry(.1,.1,.5),new THREE.MeshStandardMaterial({color:65416,wireframe:!0})),e.add(t),r.grabVR.mesh=t;var o=new THREE.Geometry;o.vertices.push(new THREE.Vector3(0,0,0)),o.vertices.push(new THREE.Vector3(0,0,-100));var b=new THREE.Line(o,new THREE.LineBasicMaterial({color:8947967}));b.visible=!1,t.add(b),r.grabVR.line=b;var i,i=new THREE.Mesh(new THREE.SphereBufferGeometry(.1,6,6),new THREE.MeshStandardMaterial({color:65280,wireframe:!1,depthTest:!1,depthWrite:!1,transparent:!0,opacity:.5}));e.add(i),i.visible=!1,r.grabVR.grabberHook=i,a.push(r)},grabableObjects:o,grabableDistance:t,grab:function(e){var r=e.grabVR.raycaster.intersectObjects(o);r.length>0&&(e.grabVR.grabberHook.matrix.copy(r[0].object.matrixWorld),e.grabVR.grabberHook.applyMatrix((new THREE.Matrix4).getInverse(e.matrixWorld)),e.grabVR.mesh.add(e.grabVR.grabberHook),e.grabVR.grabbedObject=r[0].object,e.grabVR.grabberHook.visible=!0,e.grabVR.hasAGrabbedObject=!0)},release:function(e){e.grabVR.hasAGrabbedObject&&(e.grabVR.hasAGrabbedObject=!1,e.grabVR.grabberHook.visible=!1)},update:function(e){a.forEach(function(e){e.getWorldPosition(e.grabVR.raycaster.ray.origin),e.getWorldQuaternion(e.grabVR.quaternion),e.grabVR.raycaster.ray.direction.copy(b).applyEuler((new THREE.Euler).setFromQuaternion(e.grabVR.quaternion,"XYZ"));var r=e.grabVR.raycaster.intersectObjects(o);if(r.length>0?e.grabVR.line.visible=!0:e.grabVR.line.visible=!1,e.grabVR.hasAGrabbedObject){var a=new THREE.Vector3;e.getWorldPosition(a),e.grabVR.grabberHook.lookAt(e.grabVR.mesh.worldToLocal(a));var a=new THREE.Vector3;e.grabVR.grabberHook.getWorldPosition(a),a=e.grabVR.grabbedObject.worldToLocal(a).multiplyScalar(4),a.applyEuler(e.grabVR.grabbedObject.rotation),n?e.grabVR.grabbedObject.setLinearVelocity(a):e.grabVR.grabberHook.getWorldPosition(e.grabVR.grabbedObject.position)}e.grabVR.mesh.position.copy(e.grabVR.raycaster.ray.origin),e.grabVR.mesh.rotation.copy((new THREE.Euler).setFromQuaternion(e.grabVR.quaternion,"XYZ")),e.grabVR.mesh.__dirtyPosition=!0,e.grabVR.mesh.__dirtyRotation=!0})}}};return e});